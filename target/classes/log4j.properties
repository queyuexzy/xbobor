#日志级别
#ALL<DEBUG<INFO<WARN<ERROR<FATAL<OFF
log4j.rootLogger=debug,info,file,stdout,myError

# sql打印输出
#log4j.logger.java.sql.Connection = DEBUG
#log4j.logger.java.sql.Statement = DEBUG
log4j.logger.java.sql.PreparedStatement = DEBUG, stdout
#log4j.logger.java.sql.ResultSet = DEBUG

#stdout 输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%p] [%l] %d{yy-MM-dd HH:mm:ss} %n%m%n

#file ########################输出到日志文件########################

log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#日志后缀格式
log4j.appender.file.DatePattern='.'yyyy-MM-dd'.log'
#日志文件输出目录及文件
#日志布局格式
log4j.appender.file.layout =org.apache.log4j.PatternLayout
#可以灵活的指定布局格式
log4j.appender.file.layout.ConversionPattern=[%p] [%l] %d{yy-MM-dd HH:mm:ss} %F%L %n%m%n
#是否追加
log4j.appender.file.Append=true


#保存异常信息到单独文件，只保持错误日志
log4j.appender.myError = org.apache.log4j.DailyRollingFileAppender 
log4j.appender.myError.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.myError.Append = true
log4j.appender.myError.Threshold = ERROR
log4j.appender.myError.layout = org.apache.log4j.PatternLayout 
log4j.appender.myError.layout.ConversionPattern =[%p] [%l] %d{yyyy-MM-dd HH:mm:ss} %F %m%n
